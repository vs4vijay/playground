version: "3.8"

services:
  caddy:
    image: caddy-security:2.7.6
    # image: caddy:2.7.6-alpine
    container_name: caddy
    restart: unless-stopped
    # command: caddy reverse-proxy --from https://yourdns:443 --to http://wg-easy:51821
    entrypoint: ["/bin/sh","-c"]
    command:
      - |
        echo "[+] Creating Caddyfile"
        tee Caddyfile <<EOF
          {
            order authenticate before respond
            order authorize before reverse_proxy
            
            security {
              local identity store localdb {
                realm local
                
                path /etc/caddy/auth/local/users.json
                # path {$HOME}/.local/caddy/users.json
              }
          
              authentication portal myportal {
                crypto key sign-verify {env.JWT_CRYPTO_KEY}

                enable identity store localdb

                cookie domain {env.DOMAIN}
                # 5 days
                cookie lifetime 432000

                transform user {
                  match email {env.ADMIN_USER}@{env.DOMAIN}
                  action add role authp/user
                }
              }

              authorization policy admin_policy {
                crypto key sign-verify {env.JWT_CRYPTO_KEY}
                set auth url https://{env.DOMAIN}/auth
                
                # with basic auth portal myportal realm local
                # with api key auth portal myportal realm local

                allow roles authp/user
              }
            }
          }
        
          {env.DOMAIN}:443 {
            
            route /* {
              respond "root" 200
            }
            
            route /auth* {
              authenticate with myportal

              # /auth/whoami
              # /auth/settings
              # /auth/portal
            }
            
            route /hi* {
              respond "hi" 200
            }
            
            route /hey* {
              authorize with admin_policy

              respond "hey" 200
            }
            
            route /portainer* {
              authorize with admin_policy
              uri strip_prefix /portainer

              reverse_proxy portainer:9000
            }

          }


          rancher.{env.DOMAIN}:443 {
            
            route /* {
              authorize with admin_policy

              reverse_proxy rancher:80
            }
            
            route /test* {
              respond "test passed" 200
            }

          }
        EOF
        
        echo "[+] Running Caddy"
        caddy run
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
    volumes:
      - ~/.caddy:/data
    networks:
      - web
    environment:
      # TODO: Create below env vars
      DOMAIN: ${DOMAIN}
      AUTHP_ADMIN_USER: ${ADMIN_USER}
      AUTHP_ADMIN_EMAIL: "${ADMIN_USER}@${DOMAIN}"
      AUTHP_ADMIN_SECRET: ${ADMIN_PASSWORD}
      JWT_CRYPTO_KEY: ${JWT_CRYPTO_KEY}

networks:
  web:
    name: web
    external: true