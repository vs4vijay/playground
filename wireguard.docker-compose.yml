version: "3"

networks:
  private_network:
    ipam:
      driver: default
      config:
        - subnet: 10.2.0.0/24

services:
  unbound:
    image: "mvance/unbound:latest"
    container_name: unbound
    hostname: unbound
    volumes:
      - "./unbound:/opt/unbound/etc/unbound/"
    cap_add:
      - NET_ADMIN
    networks:
      private_network:
        ipv4_address: 10.2.0.200
    restart: unless-stopped

  wg-easy:
    image: weejewel/wg-easy
    container_name: wg-easy
    environment:
      WG_HOST: "yourdns"
      PASSWORD: ""
    ports:
      - "51820:51820/udp"
      - "51821:51821/tcp"
    volumes:
      - "./wireguard:/etc/wireguard"
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
    restart: unless-stopped
    networks:
      private_network:
        ipv4_address: 10.2.0.3

  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    hostname: pihole
    depends_on: [unbound]
    dns:
      - 127.0.0.1
      - 10.2.0.200 # Points to unbound
    environment:
      TZ: "America/Los_Angeles"
      WEBPASSWORD: "" # Blank password - Can be whatever you want.
      ServerIP: 10.2.0.100 # Internal IP of pihole
      DNS1: 10.2.0.200 # Unbound IP
      DNS2: 10.2.0.200 # If we don't specify two, it will auto pick google.
    # Volumes store your data between container upgrades
    volumes:
      - "./etc-pihole/:/etc/pihole/"
      - "./etc-dnsmasq.d/:/etc/dnsmasq.d/"
    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
    networks:
      private_network:
        ipv4_address: 10.2.0.100
    restart: unless-stopped

  wg-caddy:
    image: caddy:2.6.1-alpine
    container_name: wg-caddy
    command: caddy reverse-proxy --from https://yourdns:443 --to http://wg-easy:51821
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
    volumes:
      - ~/.caddy_data:/data
    networks:
      private_network:
        ipv4_address: 10.2.0.133
    restart: unless-stopped
